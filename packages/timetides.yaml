# Moon & Seasons
# Need the Moon Phase Icons and Season Icons
# See my Github https://github.com/DavidFW1960/home-assistant/tree/master/www/icons
# Note also that for the Moon Icons, by default these are set for the Southern Hemisphere.
# See that the jpg files all start with an 'S'. For Northern Hemisphere, change these to 'N'

homeassistant:
  customize:
    package.node_anchors:
      common: &common
        package: "timetides"
        
    sensor.yrwthr:
      friendly_name: Weather
      <<: *common
    sensor.yr_symbol:
      hidden: true
      <<: *common
    sensor.sunrisetoday:
      friendly_name: Sunrise (Today)
      <<: *common
    sensor.sunsettoday:
      friendly_name: Sunset (Today)
      <<: *common

# Binary Sensor for sun up or down
#binary_sensor:
#  - platform: sun2
#    monitored_conditions:
#      - elevation
#      - elevation:
#          above: 25
#          name: Sun Above 25

# Skyfield Custom Component https://github.com/partofthething/ha_skyfield
#camera:
#  - platform: ha_skyfield
#    show_time: true
#    show_constellations: true
#    show_legend: true

#sensor:
# 
#  - platform: sun2
#    monitored_conditions:
#      - solar_midnight
#      - astronomical_dawn
#      - nautical_dawn
#      - dawn
#      - sunrise
#      - solar_noon
#      - sunset
#      - dusk
#      - nautical_dusk
#      - astronomical_dusk
#      - daylight
#      - civil_daylight
#      - nautical_daylight
#      - astronomical_daylight
#      - night
#      - civil_night
#      - nautical_night
#      - astronomical_night
#      - elevation
#      - min_elevation
#      - max_elevation
#      - deconz_daylight
#      - sun_phase
#    entity_namespace: solar

sensor:

  - platform: template
    sensors:
      nextsunrise:
        friendly_name: 'Next Sunrise'
        value_template: >
          {{ as_timestamp(state_attr('sun.sun', 'next_rising')) | timestamp_custom(' %I:%M %p') | replace(" 0", "") }}
        icon_template: mdi:weather-sunset-up
      nextsunset:
        friendly_name: 'Next Sunset'
        value_template: >
          {{ as_timestamp(state_attr('sun.sun', 'next_setting')) | timestamp_custom(' %I:%M %p') | replace(" 0", "") }}
        icon_template: mdi:weather-sunset-down
      sunrisetoday:
        friendly_name: 'Sunrise'
        value_template: >
          {{ as_timestamp(states('sensor.home_sun_rising')) | timestamp_custom(' %I:%M %p') | replace(" 0", "") }}
        icon_template: mdi:weather-sunset-up
      sunsettoday:
        friendly_name: 'Sunset'
        value_template: >
          {{ as_timestamp(states('sensor.home_sun_setting')) | timestamp_custom(' %I:%M %p') | replace(" 0", "") }}
        icon_template: mdi:weather-sunset-down
      daylightyesterday:
        friendly_name: 'Day Length Yesterday'
        value_template: >
          {{ state_attr('sensor.home_sun_daylight', 'yesterday_hms') }}
        icon_template: mdi:weather-sunny
      daylighttoday:
        friendly_name: 'Day Length Today'
        value_template: >
          {{ state_attr('sensor.home_sun_daylight', 'today_hms') }}
        icon_template: mdi:weather-sunny
      daylighttomorrow:
        friendly_name: 'Day Length Tomorrow'
        value_template: >
          {{ state_attr('sensor.home_sun_daylight', 'tomorrow_hms') }}
        icon_template: mdi:weather-sunny
      daylengthchange:
        friendly_name: 'Change in Day Length'
        unit_of_measurement: "seconds"
        value_template: >
          {{ ((state_attr('sensor.home_sun_daylight', 'today') - state_attr('sensor.home_sun_daylight', 'yesterday')) * 3600) | round(0) }}
        icon_template: mdi:weather-sunny
      moonphases:
        friendly_name: 'Moon'
        value_template: >
          {{ states('sensor.moon').title().replace('_',' ') }}
        entity_picture_template: >
          {% set state = states('sensor.moon').title().replace('_','').replace(' ','') %}
          {{ '/local/icons/MoonPhases/S{}.jpg'.format(state) }}
      seasonname:
        friendly_name: 'Season'
        value_template: >
          {{ states('sensor.season').title() }} 
        entity_picture_template: >-
          {% set state = states('sensor.season'.title()) %}
          {{ '/local/icons/season/{}.png'.format(state) }}
