# Default Config
# https://github.com/home-assistant/home-assistant/blob/dev/homeassistant/components/default_config/manifest.json
# documentation: https://www.home-assistant.io/integrations/default_config
default_config:

homeassistant:

# Customization file
  customize: !include customize.yaml
# customize_glob: !include customize_glob.yaml

# Fuel Monitor, System Monitor, Sun, Moon, Transport, Weather, Updates, Fire Incidents, Recycling Night, Themes Packages
  packages: !include_dir_named packages

# LimitlessLED use slider switch
  customize_domain:
    light:
      assumed_state: false

# Auth & 2FA
  auth_mfa_modules:
    - type: notify
    - type: totp
  auth_providers:
    - type: trusted_networks
      trusted_networks:
        - 127.0.0.1
        - ::1
        - !secret my_ipv4_network
        - fd00::/8
        - !secret zerotier_network
        - !secret my_ipv6_network
        - !secret ben_ipv6_network
#        - !secret sam_ipv6_network
      trusted_users:
        127.0.0.1: !secret user_id
        "::1": !secret user_id
        !secret trusted_ipv4: !secret user_id
        "fd00::/8": !secret user_id
        !secret trusted_ipv6: !secret user_id
        !secret ben_trusted_ipv6: !secret user_id
#        !secret sam_trusted_ipv6: !secret user_id
        !secret zerotier_network: !secret user_id
      allow_bypass_login: false
    - type: homeassistant

# Python
# python_script:

# Enables the frontend
frontend:
  themes: !include_dir_merge_named themes
  extra_module_url:
    - /hacsfiles/lovelace-card-mod/card-mod.js

# HTML5 Push Notifications
notify:
  - platform: html5
    name: html5_notify
    vapid_pub_key: !secret vapid_pub
    vapid_prv_key: !secret vapid_priv
    vapid_email: !secret vapid_email
  - platform: group
    name: David iOS Notify
    services:
      - service: mobile_app_davids_iphone
        data:
          data:
            push:
              sound:
                name: default
      - service: mobile_app_david_s_ipad
        data:
          data:
            push:
              sound:
                name: default

http:
  # ssl_certificate: /ssl/fullchain.pem
  # ssl_key: /ssl/privkey.pem
  use_x_forwarded_for: true
  trusted_proxies:
    - 127.0.0.1
    - ::1
  ip_ban_enabled: true
  login_attempts_threshold: 5

# Logger
logger:
  default: warn  #warn
  logs:
#   TransportNSW.transportnsw: error
    custom_components.sensor.authenticated: debug
    homeassistant.components.analytics : info
#   custom_components.iphonedetect: debug
#   homeassistant.components.http.view: error
#   hacs: debug ###Now Enable in HACS options
#   homeassistant.components.here_travel_time: debug
#   homeassistant.components.zeroconf: debug
#   pyipp: debug
#   homeassistant.components.ssdp: debug
#   homeassistant.components.fritzbox: debug
#   pyfritzhome: debug
#   homeassistant.components.mobile_app: debug
#   homeassistant.components.webhook: debug
#   homeassistant.components.http: debug
    fritzconnection: info

# iFrame/Panel Custom 
panel_iframe:
  portainer:
    title: Portainer
    icon: mdi:docker
    url: !secret portainer
  tasmoadmin:
    title: Tasmo Admin
    icon: mdi:lightbulb-on
    url: !secret tasmoadmin
  mdiindex:
    title: MDI Icon Index
    icon: mdi:vector-square
#   url: https://cdn.rawgit.com/james-fry/home-assistant-mdi/efd95d7a/home-assistant-mdi.html
    url: https://dev.materialdesignicons.com/icons

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time
history:
  exclude:
    domains:
      - automation
      - binary_sensor
      - geo_location
    entities:
      - sensor.busmonitor1
      - sensor.busmonitor
      - sensor.trainmonitor1
      - sensor.trainmonitor2
      - sensor.centralgosford
      - sensor.gosfordcentral
      - sensor.karionggosford
      - sensor.gosfordkariong

# Sensors
sensor:

# Authentication Sensor
  - platform: authenticated
    enable_notification: true
    provider: 'ipapi'
    exclude:
      - !secret my_ipv4_network
      - fd00::/8
      - !secret zerotier_network
      - !secret my_ipv6_network
      - !secret ben_ipv6_network
      - 2001:4860:4000::/36      # Google

# Alarm Emails
#  - platform: imap
#    name: Alarm Triggers
#    server: imap.gmail.com
#    port: 993
#    username: !secret outlooksyncuser
#    password: !secret outlooksyncpass
#    folder: inbox
#    search: !secret alarmnotification

# Radarr and Sonarr Upcoming Media

  - platform: sonarr_upcoming_media
    api_key: !secret my_sonarr_api
    host: !secret my_sonarr_host
    port: !secret my_sonarr_port
    days: 60
    ssl: false
    max: 10
  - platform: radarr_upcoming_media
    api_key: !secret my_radarr_api
    host: !secret my_radarr_host
    port: !secret my_radarr_port
    days: 120
    ssl: false
    theaters: true
    max: 10

# SSL Certificates Expiry Days
  - platform: template
    sensors:
      cert_expiry_ha_domain_days:
        friendly_name: 'SSL Certificate Expiry Days'
        value_template: >-
          {% if is_state('sensor.cert_expiry_ha_domain', 'unavailable') %}
            unavailable
          {% else %}
            {{ (as_timestamp(states('sensor.cert_expiry_ha_domain')) - as_timestamp( now())) | timestamp_custom('%-j') }}
          {% endif %}
  - platform: template
    sensors:
      cert_expiry_cockpit_days:
        friendly_name: 'SSL Cockpit Expiry Days'
        value_template: >-
          {% if is_state('sensor.cert_expiry_cockpit', 'unavailable') %}
            unavailable
          {% else %}
            {{ (as_timestamp(states('sensor.cert_expiry_cockpit')) - as_timestamp( now())) | timestamp_custom('%-j') }}
          {% endif %}
  - platform: template
    sensors:
      cert_expiry_glances_days:
        friendly_name: 'SSL Glances Expiry Days'
        value_template: >-
          {% if is_state('sensor.cert_expiry_glances', 'unavailable') %}
            unavailable
          {% else %}
            {{ (as_timestamp(states('sensor.cert_expiry_glances')) - as_timestamp( now())) | timestamp_custom('%-j') }}
          {% endif %}
  - platform: template
    sensors:
      cert_expiry_logviewer_days:
        friendly_name: 'SSL Logviewer Expiry Days'
        value_template: >-
          {% if is_state('sensor.cert_expiry_logviewer', 'unavailable') %}
            unavailable
          {% else %}
            {{ (as_timestamp(states('sensor.cert_expiry_logviewer')) - as_timestamp( now())) | timestamp_custom('%-j') }}
          {% endif %}
  - platform: template
    sensors:
      cert_expiry_portainer_days:
        friendly_name: 'SSL Portainer Expiry Days'
        value_template: >-
          {% if is_state('sensor.cert_expiry_portainer', 'unavailable') %}
            unavailable
          {% else %}
            {{ (as_timestamp(states('sensor.cert_expiry_portainer')) - as_timestamp( now())) | timestamp_custom('%-j') }}
          {% endif %}
  - platform: template
    sensors:
      cert_expiry_tasmoadmin_days:
        friendly_name: 'SSL Tasmoadmin Expiry Days'
        value_template: >-
          {% if is_state('sensor.cert_expiry_tasmoadmin', 'unavailable') %}
            unavailable
          {% else %}
            {{ (as_timestamp(states('sensor.cert_expiry_tasmoadmin')) - as_timestamp( now())) | timestamp_custom('%-j') }}
          {% endif %}

# Artisan Charge
mqtt:
  sensor:
    name: "Artisan Events"
    state_topic: "artisan"
    icon: mdi:coffee
    value_template: "{{ value_json.state }}"

# Text to speech
tts:
  - platform: google_translate

# Switches
switch:

# Template Switch for Harmony Remote
  - platform: template
    switches:
      harmony:
        value_template: "{{ not is_state_attr('remote.harmony_hub', 'current_activity', 'PowerOff') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.harmony_hub
            activity: 'Watch DTV'
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.harmony_hub
            activity: 'PowerOff'

# Binary Switch for Home and Away Automations, Alarm & Garage Door, Overtime & Holiday
input_boolean:
  homeandawayauto:
    name: Home and Away Automations
  alarmgaragedoor:
    name: Alarm arm/disarm and Garage door shut/open
  overtime:
    name: Overtime
  holiday:
    name: Holiday
  lizcovid:
    name: Liz Home or Work
  retrigger:
    name: Retrigger Docker Containers Restart

# Clear Out Gmail Alarm Notifications, Clean Known Devices file, Remove Bans and restart
shell_command:
  removealarm: python /config/emptyinbox.py
  clean_knowndevices: /bin/bash /config/clean_knowndevices.sh
  remove_ip_bans: /bin/bash /config/remove_bans.sh

recorder: !include recorder.yaml
#google_assistant: !include google_assistant.yaml
cloud: !include google_assistant_nabu.yaml
light: !include lights.yaml
group: !include groups.yaml
scene: !include scenes.yaml
automation: !include automations.yaml
script: !include scripts.yaml
