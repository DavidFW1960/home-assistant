{"version":3,"file":"lit-element_styling_test.js","sourceRoot":"","sources":["../src/test/lit-element_styling_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport '@webcomponents/shadycss/apply-shim.min.js';\nimport {\n  html,\n  LitElement,\n} from '../lit-element.js';\n\ndeclare global {\n  interface Window {\n    ShadyDOM: any; // tslint:disable-line\n  }\n}\n\nconst assert = chai.assert;\n\nsuite('Styling', () => {\n  let container: HTMLElement;\n\n  setup(() => {\n    container = document.createElement('div');\n    document.body.appendChild(container);\n  });\n\n  teardown(() => {\n    if (container && container.parentNode) {\n      container.parentNode.removeChild(container);\n    }\n  });\n\n  test('content shadowRoot is styled', () => {\n    customElements.define('s-1', class extends LitElement {\n      _render() { return html`\n        <style>\n          div {\n            border: 2px solid blue;\n          }\n        </style>\n        <div>Testing...</div>`;\n      }\n    });\n    const el = document.createElement('s-1');\n    container.appendChild(el);\n    const div = el.shadowRoot!.querySelector('div');\n    assert.equal(getComputedStyle(div!).getPropertyValue('border-top-width').trim(), '2px');\n  });\n\n  test('shared styling rendered into shadowRoot is styled', () => {\n    const style = html`<style>\n      div {\n        border: 4px solid blue;\n      }\n    </style>`;\n    customElements.define('s-2', class extends LitElement {\n      _render() { return html`\n        <style>\n          div {\n            border: 2px solid blue;\n          }\n        </style>\n        ${style}\n        <div>Testing...</div>`;\n      }\n    });\n    const el = document.createElement('s-2');\n    container.appendChild(el);\n    const div = el.shadowRoot!.querySelector('div');\n    assert.equal(getComputedStyle(div!).getPropertyValue('border-top-width').trim(), '4px');\n  });\n\n  test('custom properties render', () => {\n    customElements.define('s-3', class extends LitElement {\n      _render() { return html`\n        <style>\n          :host {\n            --border: 8px solid red;\n          }\n          div {\n            border: var(--border);\n          }\n        </style>\n        <div>Testing...</div>`;\n      }\n    });\n    const el = document.createElement('s-3');\n    container.appendChild(el);\n    const div = el.shadowRoot!.querySelector('div');\n    assert.equal(getComputedStyle(div!).getPropertyValue('border-top-width').trim(), '8px');\n  });\n\n  test('custom properties flow to nested elements', () => {\n    customElements.define('s-4-inner', class extends LitElement {\n      _render() { return html`\n        <style>\n          div {\n            border: var(--border);\n          }\n        </style>\n        <div>Testing...</div>`;\n      }\n    });\n    customElements.define('s-4', class extends LitElement {\n      _render() { return html`\n        <style>\n          s-4-inner {\n            --border: 8px solid red;\n          }\n        </style>\n        <s-4-inner></s-4-inner>`;\n      }\n    });\n    const el = document.createElement('s-4');\n    container.appendChild(el);\n    const div = el.shadowRoot!.querySelector('s-4-inner')!.shadowRoot!.querySelector('div');\n    assert.equal(getComputedStyle(div!).getPropertyValue('border-top-width').trim(), '8px');\n  });\n\n  test('elements with custom properties can move between elements', (done) => {\n    customElements.define('s-5-inner', class extends LitElement {\n      _render() { return html`\n        <style>\n          div {\n            border: var(--border);\n          }\n        </style>\n        <div>Testing...</div>`;\n      }\n    });\n    customElements.define('s-5', class extends LitElement {\n      _render() { return html`\n        <style>\n          s-5-inner {\n            --border: 2px solid red;\n          }\n        </style>\n        <s-5-inner></s-5-inner>`;\n      }\n    });\n    customElements.define('s-6', class extends LitElement {\n      _render() { return html`\n        <style>\n          s-5-inner {\n            --border: 8px solid red;\n          }\n        </style>`;\n      }\n    });\n    const el = document.createElement('s-5');\n    const el2 = document.createElement('s-6');\n    container.appendChild(el);\n    container.appendChild(el2);\n    const inner = el.shadowRoot!.querySelector('s-5-inner');\n    const div = inner!.shadowRoot!.querySelector('div');\n    assert.equal(getComputedStyle(div!).getPropertyValue('border-top-width').trim(), '2px');\n    el2!.shadowRoot!.appendChild(inner!);\n    requestAnimationFrame(() => {\n      assert.equal(getComputedStyle(div!).getPropertyValue('border-top-width').trim(), '8px');\n      done();\n    });\n  });\n\n  test('@apply renders in nested elements', () => {\n    customElements.define('s-7-inner', class extends LitElement {\n      _render() { return html`\n        <style>\n          div {\n            @apply --bag;\n          }\n        </style>\n        <div>Testing...</div>`;\n      }\n    });\n    customElements.define('s-7', class extends LitElement {\n      _render() { return html`\n        <style>\n          s-7-inner {\n            --bag: {\n              border: 10px solid red;\n            }\n          }\n        </style>\n        <s-7-inner></s-7-inner>`;\n      }\n    });\n    const el = document.createElement('s-7');\n    container.appendChild(el);\n    const div = el.shadowRoot!.querySelector('s-7-inner')!.shadowRoot!.querySelector('div');\n    assert.equal(getComputedStyle(div!).getPropertyValue('border-top-width').trim(), '10px');\n  });\n\n});\n\nsuite('ShadyDOM', () => {\n\n  let container: HTMLElement;\n\n  setup(function() {\n    if (!window.ShadyDOM) {\n      this.skip();\n    } else {\n      container = document.createElement('div');\n      document.body.appendChild(container);\n    }\n  });\n\n  teardown(() => {\n    if (container && container.parentNode) {\n      container.parentNode.removeChild(container);\n    }\n  });\n\n  test('properties in styles render with initial value and cannot be changed', async () => {\n    let border = `6px solid blue`;\n    customElements.define('shady-1', class extends LitElement {\n      _render() { return html`\n        <style>\n          div {\n            border: ${border};\n          }\n        </style>\n        <div>Testing...</div>`;\n      }\n    });\n    const el = document.createElement('shady-1') as LitElement;\n    container.appendChild(el);\n    const div = el.shadowRoot!.querySelector('div');\n    assert.equal(getComputedStyle(div!).getPropertyValue('border-top-width').trim(), '6px');\n    border = `4px solid orange`;\n    el.requestRender();\n    await el.renderComplete;\n    assert.equal(getComputedStyle(div!).getPropertyValue('border-top-width').trim(), '6px');\n  });\n\n});\n"]}