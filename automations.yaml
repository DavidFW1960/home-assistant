- id: '1507434167220'
  alias: Coffee Maker On
  trigger:
  - platform: time
    at: '07:00:00'
  - platform: time
    at: '07:15:00'
  - platform: time
    at: '08:00:00'
  - platform: time
    at: '12:00:00'
  - platform: time
    at: '19:00:00'
  - platform: time
    at: '20:00:00'
  - entity_id: person.liz
    from: 'not_home'
    platform: state
    to: 'home'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: 'input_boolean.homeandawayauto'
        state: 'on'
      - condition: or
        conditions:
          - condition: template
            value_template: "{{ now().strftime('%H:%M') == '07:00' and now().weekday()
              < 5  and (states('input_boolean.holiday') == 'off') }}"
          - condition: template
            value_template: "{{ now().strftime('%H:%M') == '07:15' and ((as_timestamp(now())
              - as_timestamp('2017-09-24 00:00:00')) / 86400)|int % 28 == 0 }}"
          - condition: template
            value_template: "{{ now().strftime('%H:%M') == '08:00' }}"
          - condition: template
            value_template: "{{ now().strftime('%H:%M') == '12:00' and ((as_timestamp(now())
              - as_timestamp('2017-09-24 00:00:00')) / 86400)|int % 28 == 0 }}"
          - condition: template
            value_template: "{{ now().strftime('%H:%M') == '19:00' and (states('input_boolean.overtime') == 'off') }}"
          - condition: template
            value_template: "{{ now().strftime('%H:%M') == '19:00' and now().weekday() > 4 }}"
          - condition: template
            value_template: "{{ now().strftime('%H:%M') == '20:00' and (states('input_boolean.overtime') == 'on') and now().weekday() < 5 }}"
          - condition: and
            conditions:
              - condition: template
                value_template: "{{ now().weekday() < 5 }}"
              - condition: time
                after: '18:00:00'
                before: '19:00:00'
              - condition: state
                entity_id: person.liz
                state: 'home'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.sonoff12914
  - condition: and
    conditions:
      - condition: template
        value_template: "{{ now().weekday() < 5 }}"
      - condition: time
        after: '18:00:00'
        before: '19:00:00'
      - condition: state
        entity_id: person.liz
        state: 'home'      
  - service: notify.david_ios_notify
    data:
      message: 'Coffee Maker On'
      title: 'Liz is home'
- id: '1507434167221'
  alias: Coffee Maker Off
  trigger:
  - platform: time
    at: '08:30:00'
  - platform: time
    at: '14:00:00'
  - platform: time
    at: '16:00:00'
  - platform: time
    at: '22:00:00'
  condition:
    condition: or
    conditions:
    - condition: template
      value_template: "{{ now().strftime('%H:%M') == '08:30' and ((as_timestamp(now())
        - as_timestamp('2017-09-24 00:00:00')) / 86400)|int % 28 == 0 }}"
    - condition: template
      value_template: "{{ now().strftime('%H:%M') == '14:00' and now().weekday()
        < 5  and (states('input_boolean.holiday') == 'off') }}"
    - condition: template
      value_template: "{{ now().strftime('%H:%M') == '16:00' }}"
    - condition: template
      value_template: "{{ now().strftime('%H:%M') == '22:00' }}"
  action:
  - service: switch.turn_off
    data:
      entity_id: switch.sonoff12914
- id: '1505977024304'
  alias: Turn Lounge Light On Elevation < 25Â° & after 4PM
  trigger:
  - platform: numeric_state
    below: 25
    entity_id: sun.sun
    value_template: '{{ state.attributes.elevation }}'
  - platform: time
    at: '16:00:00'
  condition:
  - condition: time
    after: '16:00:00'
  - condition: state
    entity_id: 'input_boolean.homeandawayauto'
    state: 'on'
  - condition: template
    value_template: "{{state_attr('sun.sun', 'elevation') < 25}}"
  action:
  - service: script.turn_on
    data:
      entity_id: script.loungenormal
- id: '1523937971401'
  alias: Toothbrush On
  trigger:
  - platform: time
    at: '08:00:00'
  condition:
  - condition: state
    entity_id: 'input_boolean.homeandawayauto'
    state: 'on'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.sonoff23110
- id: '1523938046054'
  alias: Toothbrush Off
  trigger:
  - platform: time
    at: '21:00:00'
  - entity_id: switch.sonoff23110
    from: 'off'
    platform: state
    to: 'on'
  condition:
    condition: or
    conditions:
    - condition: time
      after: '21:00:00'
      before: '00:00:00'
    - condition: time
      after: '00:00:00'
      before: '08:00:00'
  action:
  - service: switch.turn_off
    data:
      entity_id: switch.sonoff23110
- id: '1519082437913'
  alias: Make Snapshot & Copy Backups to Dropbox
  trigger:
  - platform: time
    at: '03:00:00'
  condition: []
  action:
  - service: hassio.snapshot_full
    data_template:
      name: Automated Backup {{ now().strftime('%Y-%m-%d') }}
  - service: notify.david_ios_notify
    data_template:
      message: Created backup named "Automated Backup {{ now().strftime('%Y-%m-%d')
        }}"
  - delay: '01:00:00'
  - service: hassio.addon_stdin
    data_template:
      addon: 7be23ff5_dropbox_sync
      input:
        command: upload
  - service: notify.david_ios_notify
    data_template:
      message: Copied all new backups to Dropbox
- id: '1532478833426'
  alias: Lights Off Failsafe
  trigger:
  - platform: state
    from: 'on'
    to: 'off'
    entity_id: light.lounge, light.dining, light.desk, light.office
  condition: []
  action:
  - delay: '00:00:02'
  - service: light.turn_off
    data_template:
      entity_id: '{%- if (as_timestamp(now()) - as_timestamp(states.light.lounge.last_changed)
        < 5) and (as_timestamp(now()) - as_timestamp(states.light.desk.last_changed)
        < 5) -%} light.lounge, light.desk {%- elif (as_timestamp(now()) - as_timestamp(states.light.office.last_changed)
        < 5) and (as_timestamp(now()) - as_timestamp(states.light.desk.last_changed)
        < 5) -%} light.office, light.desk {%- elif (as_timestamp(now()) - as_timestamp(states.light.desk.last_changed)
        < 5) -%} light.desk {%- elif (as_timestamp(now()) - as_timestamp(states.light.office.last_changed)
        < 5) -%} light.office {%- elif (as_timestamp(now()) - as_timestamp(states.light.lounge.last_changed)
        < 5) -%} light.lounge {%- else -%} light.dining {%- endif -%}'
  - delay: '00:00:02'
  - service: light.turn_off
    data_template:
      entity_id: '{%- if (as_timestamp(now()) - as_timestamp(states.light.lounge.last_changed)
        < 10) and (as_timestamp(now()) - as_timestamp(states.light.desk.last_changed)
        < 10) -%} light.lounge, light.desk {%- elif (as_timestamp(now()) - as_timestamp(states.light.office.last_changed)
        < 10) and (as_timestamp(now()) - as_timestamp(states.light.desk.last_changed)
        < 10) -%} light.office, light.desk {%- elif (as_timestamp(now()) - as_timestamp(states.light.desk.last_changed)
        < 10) -%} light.desk {%- elif (as_timestamp(now()) - as_timestamp(states.light.office.last_changed)
        < 10) -%} light.office {%- elif (as_timestamp(now()) - as_timestamp(states.light.lounge.last_changed)
        < 10) -%} light.lounge {%- else -%} light.dining {%- endif -%}'
- id: '1532478833427'
  alias: Lights On Failsafe
  trigger:
  - platform: state
    from: 'off'
    to: 'on'
    entity_id: light.lounge, light.dining, light.desk, light.office
  condition: []
  action:
  - delay: '00:00:02'
  - service: light.turn_on
    data_template:
      entity_id: '{%- if (as_timestamp(now()) - as_timestamp(states.light.lounge.last_changed)
        < 5) and (as_timestamp(now()) - as_timestamp(states.light.desk.last_changed)
        < 5) -%} light.lounge, light.desk {%- elif (as_timestamp(now()) - as_timestamp(states.light.office.last_changed)
        < 5) and (as_timestamp(now()) - as_timestamp(states.light.desk.last_changed)
        < 5) -%} light.office, light.desk {%- elif (as_timestamp(now()) - as_timestamp(states.light.desk.last_changed)
        < 5) -%} light.desk {%- elif (as_timestamp(now()) - as_timestamp(states.light.office.last_changed)
        < 5) -%} light.office {%- elif (as_timestamp(now()) - as_timestamp(states.light.lounge.last_changed)
        < 5) -%} light.lounge {%- else -%} light.dining {%- endif -%}'
      brightness: 191   #brightness_pct: 75
      color_temp: 322   #kelvin: 3100
  - delay: '00:00:05'
  - service: light.turn_on
    data_template:
      entity_id: '{%- if (as_timestamp(now()) - as_timestamp(states.light.lounge.last_changed)
        < 10) and (as_timestamp(now()) - as_timestamp(states.light.desk.last_changed)
        < 10) -%} light.lounge, light.desk {%- elif (as_timestamp(now()) - as_timestamp(states.light.office.last_changed)
        < 10) and (as_timestamp(now()) - as_timestamp(states.light.desk.last_changed)
        < 10) -%} light.office, light.desk {%- elif (as_timestamp(now()) - as_timestamp(states.light.desk.last_changed)
        < 10) -%} light.desk {%- elif (as_timestamp(now()) - as_timestamp(states.light.office.last_changed)
        < 10) -%} light.office {%- elif (as_timestamp(now()) - as_timestamp(states.light.lounge.last_changed)
        < 10) -%} light.lounge {%- else -%} light.dining {%- endif -%}'
      brightness: 191   #brightness_pct: 75
      color_temp: 322   #kelvin: 3100
- id: 'closegaragesetalarm'
  alias: Close Garage and Set Alarm
  trigger:
  - entity_id: input_boolean.alarmgaragedoor
    from: 'off'
    platform: state
    to: 'on'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.sonoff51083
  - delay: '00:00:10'
  - service: switch.turn_on
    data:
      entity_id: switch.sonoff63719
  - delay: '00:00:10'
  - service: notify.david_ios_notify
    data_template:
      message: >
        {%- if (as_timestamp(now()) - as_timestamp(states.switch.sonoff63719.last_changed)
        < 60 ) and (as_timestamp(now()) - as_timestamp(states.switch.sonoff51083.last_changed) 
        < 60 ) %} Garage closed & Alarm armed Verified {%- else %} Error occurred arming {%- endif %}
      title: 'Home Arming Notification'
  - service: persistent_notification.create
    data_template:
      message: >
        {%- if (as_timestamp(now()) - as_timestamp(states.switch.sonoff63719.last_changed)
        < 60 ) and (as_timestamp(now()) - as_timestamp(states.switch.sonoff51083.last_changed) 
        < 60 ) %} Garage closed & Alarm armed Verified {%- else %} Error occurred arming {%- endif %}
- id: 'deactivatealarmopengarage'
  alias: Deactivate Alarm and Open Garage
  trigger:
  - entity_id: input_boolean.alarmgaragedoor
    from: 'on'
    platform: state
    to: 'off'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.sonoff63719
  - service: switch.turn_on
    data:
      entity_id: switch.sonoff51083
  - delay: "00:00:10"
  - service: notify.david_ios_notify
    data_template:
      message: >
        {%- if (as_timestamp(now()) - as_timestamp(states.switch.sonoff63719.last_changed)
        < 60 ) and (as_timestamp(now()) - as_timestamp(states.switch.sonoff51083.last_changed) 
        < 60 ) %} Alarm disabled & Garage opened Verified {%- else %} Error occurred disarming {%- endif %}
      title: 'Home Disarming Notification'
  - service: persistent_notification.create
    data_template:
      message: >
        {%- if (as_timestamp(now()) - as_timestamp(states.switch.sonoff63719.last_changed)
        < 60 ) and (as_timestamp(now()) - as_timestamp(states.switch.sonoff51083.last_changed) 
        < 60 ) %} Alarm disabled & Garage opened Verified {%- else %} Error occurred disarming {%- endif %}
- id: 'tasmota_firmware_installed'
  alias: Tasmota Firmware Installed
  trigger:
  - at: '00:00:00'
    platform: time
  - at: '12:00:00'
    platform: time
  - event: start
    platform: homeassistant
  action:
  - service: script.turn_on
    data:
      entity_id: script.firmwarealltasmota
- id: '1532478833428'
  alias: Power State Tasmota on HA Start-Up
  trigger:
  - event: start
    platform: homeassistant
  action:
  - service: script.turn_on
    data:
      entity_id: script.startupalltasmota
- id: 'dockercontainers'
  alias: Restart Docker Containers when memory > 35%
  trigger:
  - platform: numeric_state
    entity_id: sensor.memory_use_percent
    above: 35
    for:
      hours: 1
      minutes: 0
      seconds: 0    
  action:
  - service: switch.turn_off
    entity_id: switch.ha_dockermon_radarr, switch.ha_dockermon_sonarr, switch.ha_dockermon_sabnzbd
  - delay: '00:01:00'
  - service: switch.turn_on
    entity_id: switch.ha_dockermon_radarr, switch.ha_dockermon_sonarr, switch.ha_dockermon_sabnzbd
- id: 'alarmevent'
  alias: Alarm Event Triggered
  trigger:
  - platform: state
    entity_id: sensor.alarm_triggers
  condition:
    - condition: template
      value_template: "{{ states('sensor.alarm_triggers') != '0' and states('sensor.alarm_triggers') != 'unavailable' }}"
  action:
  - service: notify.david_ios_notify
    data:
      message: 'Alarm Event Occurred'
      title: 'Alarm Notification'
  - service: persistent_notification.create
    data:
      message: 'Alarm Event Occurred'
      title: 'Alarm Notification'
- id: 'alarmeventrefresh'
  alias: 'Alarm Event Check'
  trigger:
  - event: start
    platform: homeassistant
  - platform: time_pattern
    minutes: '/1'
  action:
  - service: homeassistant.update_entity
    entity_id: sensor.alarm_triggers
- id: '1552527487165'
  alias: Purge History
  trigger:
  - at: '00:00:00'
    platform: time
  condition: []
  action:
  - data:
      keep_days: 7
      repack: 'true'
    service: recorder.purge
- id: 'cleanknowndevices'
  alias: Clean out Known Devices
  trigger:
  - event: start
    platform: homeassistant
  action:
  - service: shell_command.clean_knowndevices
- id: 'updateabbusage'
  alias: Update ABB Usage
  trigger:
  - event: start
    platform: homeassistant
  - platform: time_pattern
    minutes: '/10'
  action:
  - service: shell_command.abbusage
- id: 'artisanevents'
  alias: Roaster Needs Attention
  trigger:
  - entity_id: sensor.artisan_events
    platform: state
  action:
  - service: notify.david_ios_notify
    data_template:
      message: '{{ states("sensor.artisan_events") }}'
      title: 'Artisan Notification'
  - service: persistent_notification.create
    data_template:
      message: '{{ states("sensor.artisan_events") }}'
      title: 'Artisan Notification'
- id: 'initialautostate'
  alias: 'Switch on All Automations when HA Starts'
  initial_state: 'true'
  trigger:
  - platform: homeassistant
    event: start
  action:
  - service: automation.turn_on
    entity_id: all
- id: 'hacspersistentnotification'
  alias: HACS Persistent Notification
  trigger:
    platform: numeric_state
    entity_id: sensor.hacs
    above: 0
    for:
      minutes: 30
  condition:
    - condition: template
      value_template: "{{ not is_state('sensor.hacs', 'unknown') }}"
  action:
    - service: persistent_notification.create
      data:
        message: "Update available!"
        title: "HACS"

